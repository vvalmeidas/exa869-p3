TOKENS:
Linha / Nome do Token / Valor

1  PALAVRA_RESERVADA	class
1  IDENTIFICADOR	Carro
1  PALAVRA_RESERVADA	extends
1  IDENTIFICADOR	Transporte
1  DELIMITADOR	{
2  PALAVRA_RESERVADA	variables
2  IDENTIFICADOR	String
2  IDENTIFICADOR	marca
2  DELIMITADOR	;
3  PALAVRA_RESERVADA	variables
3  PALAVRA_RESERVADA	int
3  IDENTIFICADOR	numeroPortas
3  DELIMITADOR	;
4  PALAVRA_RESERVADA	variables
4  PALAVRA_RESERVADA	float
4  IDENTIFICADOR	valor
4  DELIMITADOR	;
5  PALAVRA_RESERVADA	variables
5  PALAVRA_RESERVADA	bool
5  IDENTIFICADOR	vendido
5  DELIMITADOR	;
6  PALAVRA_RESERVADA	const
6  PALAVRA_RESERVADA	int
6  IDENTIFICADOR	RODAS
6  OPERADOR_RELACIONAL	=
6  NUMERO	4
6  DELIMITADOR	;
8  PALAVRA_RESERVADA	method
8  PALAVRA_RESERVADA	void
8  IDENTIFICADOR	mudarValor
8  DELIMITADOR	(
8  PALAVRA_RESERVADA	float
8  IDENTIFICADOR	novoValor
8  DELIMITADOR	)
8  DELIMITADOR	{
9  IDENTIFICADOR	preco
9  OPERADOR_RELACIONAL	=
9  IDENTIFICADOR	novoValor
9  DELIMITADOR	;
14  IDENTIFICADOR	print
14  DELIMITADOR	(
14  CADEIA_DE_CARACTERES	"Preco alterado!"
14  DELIMITADOR	)
14  DELIMITADOR	;
15  DELIMITADOR	}
17  PALAVRA_RESERVADA	method
17  PALAVRA_RESERVADA	float
17  IDENTIFICADOR	lerPreco
17  DELIMITADOR	(
17  DELIMITADOR	)
17  DELIMITADOR	{
18  PALAVRA_RESERVADA	return
18  IDENTIFICADOR	valor
18  DELIMITADOR	;
19  DELIMITADOR	}
21  PALAVRA_RESERVADA	method
21  PALAVRA_RESERVADA	float
21  IDENTIFICADOR	calcularImpostos
21  DELIMITADOR	(
21  DELIMITADOR	)
21  DELIMITADOR	{
22  PALAVRA_RESERVADA	float
22  IDENTIFICADOR	imposto
22  OPERADOR_RELACIONAL	=
22  NUMERO	0
22  DELIMITADOR	;
24  PALAVRA_RESERVADA	if
24  DELIMITADOR	(
24  IDENTIFICADOR	marca
24  OPERADOR_RELACIONAL	==
24  CADEIA_DE_CARACTERES	"\"Merc\"edes\""
24  DELIMITADOR	)
24  PALAVRA_RESERVADA	then
24  DELIMITADOR	{
25  IDENTIFICADOR	imposto
25  OPERADOR_ARITMETICO	+
25  OPERADOR_RELACIONAL	=
25  IDENTIFICADOR	valor
25  OPERADOR_ARITMETICO	*
25  NUMERO	0.5
25  DELIMITADOR	;
26  DELIMITADOR	}
26  PALAVRA_RESERVADA	else
26  PALAVRA_RESERVADA	then
26  DELIMITADOR	{
27  IDENTIFICADOR	imposto
27  OPERADOR_ARITMETICO	+
27  OPERADOR_RELACIONAL	=
27  IDENTIFICADOR	valor
27  OPERADOR_ARITMETICO	*
27  NUMERO	0.2
27  DELIMITADOR	;
28  DELIMITADOR	}
29  DELIMITADOR	}
31  PALAVRA_RESERVADA	method
31  IDENTIFICADOR	String
31  IDENTIFICADOR	obterDados
31  DELIMITADOR	(
31  DELIMITADOR	)
31  DELIMITADOR	{
33  PALAVRA_RESERVADA	if
33  DELIMITADOR	(
33  IDENTIFICADOR	vendido
33  DELIMITADOR	)
33  PALAVRA_RESERVADA	then
33  DELIMITADOR	{
34  PALAVRA_RESERVADA	write
34  DELIMITADOR	(
34  CADEIA_DE_CARACTERES	"Marca:"
34  OPERADOR_ARITMETICO	+
34  IDENTIFICADOR	marca
34  OPERADOR_ARITMETICO	+
34  CADEIA_DE_CARACTERES	" com"
34  OPERADOR_ARITMETICO	+
34  IDENTIFICADOR	numeroPortas
34  OPERADOR_ARITMETICO	+
34  CADEIA_DE_CARACTERES	"portas. Valor: "
34  OPERADOR_ARITMETICO	+
34  IDENTIFICADOR	valor
34  OPERADOR_ARITMETICO	+
34  CADEIA_DE_CARACTERES	". VENDIDO!"
34  DELIMITADOR	)
34  DELIMITADOR	;
35  PALAVRA_RESERVADA	else
35  PALAVRA_RESERVADA	then
35  DELIMITADOR	{
36  PALAVRA_RESERVADA	write
36  DELIMITADOR	(
36  CADEIA_DE_CARACTERES	"Marca:"
36  OPERADOR_ARITMETICO	+
36  IDENTIFICADOR	marca
36  OPERADOR_ARITMETICO	+
36  CADEIA_DE_CARACTERES	" com"
36  OPERADOR_ARITMETICO	+
36  IDENTIFICADOR	numeroPortas
36  OPERADOR_ARITMETICO	+
36  CADEIA_DE_CARACTERES	"portas. Valor: "
36  OPERADOR_ARITMETICO	+
36  IDENTIFICADOR	valor
36  OPERADOR_ARITMETICO	+
36  CADEIA_DE_CARACTERES	". DISPONIVEL!"
36  DELIMITADOR	)
36  DELIMITADOR	;
37  DELIMITADOR	}
38  DELIMITADOR	}
39  DELIMITADOR	}



SUCESSO!